- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/bin/init_env.sh"
  template: src=init_env.sh.jinja dest={{pbase}}/{{pname}}/fate_flow/bin/init_env.sh

#- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/conf/service_conf.yaml(not fate_flow)"
#  template: src=service_conf.yaml.jinja dest={{pbase}}/{{pname}}/conf/service_conf.yaml
#  when: " ( 'host' in deploy_roles and deploy_role == 'host' and ansible_ssh_host not in fate_flow['ips'] ) or ( 'guest' in deploy_roles and deploy_role == 'guest' and ansible_ssh_host not in fate_flow['ips'] )"

- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/conf/rabbitmq_route_table.yaml"
  template: src=rabbitmq_route_table.yaml.jinja dest={{pbase}}/{{pname}}/fate_flow/conf/rabbitmq_route_table.yaml
  when: ( ansible_ssh_host in fate_flow["ips"] and fate_flow['default_engines'] == 'spark' and rabbit['enable'] == True )

- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/conf/pulsar_route_table.yaml"
  template: src=pulsar_route_table.yaml.jinja dest={{pbase}}/{{pname}}/fate_flow/conf/pulsar_route_table.yaml
  when: ( ansible_ssh_host in fate_flow["ips"] and fate_flow['default_engines'] == 'spark' and pulsar['enable'] == True )

- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/conf/service_conf.yaml"
  template: src=service_conf.yaml.jinja dest={{pbase}}/{{pname}}/fate_flow/conf/service_conf.yaml

- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/{{pname}}/proxy/osx/conf/broker/route_table.json"
  template: src=route_table.json.jinja dest={{pbase}}/{{pname}}/{{pname}}/proxy/osx/conf/broker/route_table.json
 
- name: "update({{deploy_mode}}): {{pbase}}/{{pname}}/{{pname}}/proxy/osx/conf/broker/broker.properties(exchange)"
  template: src=broker.properties.jinja dest={{pbase}}/{{pname}}/{{pname}}/proxy/osx/conf/broker/broker.properties

- name: "update({{deploy_mode}}): {{cbase}}/supervisord/supervisord.d/{{pname}}-osx.conf"
  template: src=supervisor.d/osx.conf.jinja dest={{cbase}}/supervisord/supervisord.d/{{pname}}-osx.conf
  vars:
    role: osx
    service: "{{supervisord['service']}}"
  notify:
  - stop {{pname}}-rollsite
  - reload {{pname}}-osx
  - restart {{pname}}-osx
  when: ansible_ssh_host in rollsite.get('ips',[]) and rollsite.get('enable', False) == True

- name: "flush_handlers" 
  meta: flush_handlers

- name: "wait({{deploy_mode}})): open port {{osx.get('httpPort',9370)}}( {{deploy_role}} )"
  wait_for:
    host: "{{ansible_ssh_host}}"
    port: "9370"
    delay: 0
    state: started
    timeout: 120
  register: waitfor_fate_osx_http_host
  when: ansible_ssh_host in rollsite.get('ips',[]) 

- name: "check({{deploy_mode}})): check fate_osx service( {{deploy_role}} )"
  debug: msg="******start fate_osx successfully******"
  when: "waitfor_fate_osx_http_host.get('state') == 'started'"
